
Diagnostics:
error: function type `|u64|u64 with copy+store` is not allowed as a type argument
   ┌─ tests/lambda/storable/registry_ok2.move:21:65
   │
16 │     enum Option<T> has store, copy, drop {
   │                 - declaration of type parameter `T`
   ·
21 │     fun get_function(v: &vector<FunctionEntry>, k: u64): Option<|u64| u64 with store+copy> {
   │                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^
   │
   = required by instantiating type parameter `T` of struct `Option`

error: function type `|u64|u64 with copy+store` is not allowed as a type argument (type was inferred)
   ┌─ tests/lambda/storable/registry_ok2.move:25:21
   │
16 │     enum Option<T> has store, copy, drop {
   │                 - declaration of type parameter `T`
   ·
25 │                 x = Option::Some(f.f)
   │                     ^^^^^^^^^^^^
   │
   = required by instantiating type parameter `T` of struct `Option`

error: function type `|u64|u64 with copy+store` is not allowed as a type argument
   ┌─ tests/lambda/storable/registry_ok2.move:31:110
   │
16 │     enum Option<T> has store, copy, drop {
   │                 - declaration of type parameter `T`
   ·
31 │     fun replace_or_add_function(v: &mut vector<FunctionEntry>, k: u64, f: |u64| u64 with store+copy): Option<|u64| u64 with store+copy> {
   │                                                                                                              ^^^^^^^^^^^^^^^^^^^^^^^^^
   │
   = required by instantiating type parameter `T` of struct `Option`

error: function type `|u64|u64 with copy+store` is not allowed as a type argument (type was inferred)
   ┌─ tests/lambda/storable/registry_ok2.move:37:26
   │
16 │     enum Option<T> has store, copy, drop {
   │                 - declaration of type parameter `T`
   ·
37 │                 result = Option::Some(old_f);
   │                          ^^^^^^^^^^^^
   │
   = required by instantiating type parameter `T` of struct `Option`

error: function type `|u64|u64 with copy+store` is not allowed as a type argument (type was inferred)
   ┌─ tests/lambda/storable/registry_ok2.move:70:13
   │
16 │     enum Option<T> has store, copy, drop {
   │                 - declaration of type parameter `T`
   ·
70 │             Option::Some(f) => {
   │             ^^^^^^^^^^^^
   │
   = required by instantiating type parameter `T` of struct `Option`
